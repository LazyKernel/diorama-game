#version 330

uniform sampler2D ambient_map;
uniform sampler2D shadow_map;
uniform mat4 shadow_mvp_matrix;
uniform vec4 ambient_rgba;

in vec4 f_diffuse_rgba;
in vec4 f_light_rgba;
in vec4 f_shadow_xyz;
flat in vec3 f_normal_model;

out vec4 color;

void main()
{
    // shadow contribution

    const float bias = 0.001;
    const float texels_per_world_unit = 16;
    const float texel_scale = 1.0 / texels_per_world_unit;

    vec4 shadow_grid_pos = f_shadow_xyz;

    shadow_grid_pos.xyz += f_normal_model * texel_scale * 0.5;
    shadow_grid_pos.xyz = texel_scale * (floor (shadow_grid_pos.xyz * texels_per_world_unit));

    float visibility = 1.0;
    vec4 shadow_xyz = shadow_mvp_matrix * shadow_grid_pos;
    float depth = texture (shadow_map, shadow_xyz.xy).r;
    if (depth < shadow_xyz.z - bias)
    {
        visibility -= 0.6;
    }

    //  combine

    color = f_diffuse_rgba * (ambient_rgba + (f_light_rgba * visibility));
    color.a = 1.0;
}
