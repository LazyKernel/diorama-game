#version 330

uniform sampler2D diffuse_map;
uniform sampler2D ambient_map;
uniform sampler2D shadow_map;

uniform vec4 ambient_color;

in vec2 final_uv;
in vec4 light_rgba;
in vec2 ambient_uv;
in vec4 shadow_coord;
in float cos_theta;

out vec4 color;

void main()
{
    color = texture (diffuse_map, final_uv).rgba;

    float bias = 0.001;

    // float bias = 0.01 * tan (acos (cos_theta)); // cosTheta is dot( n,l ), clamped between 0 and 1
    // bias = clamp (bias, 0, 0.02);

    float depth = texture (shadow_map, shadow_coord.xy).r;
    float visibility = 0.8;
    if (depth < shadow_coord.z - bias)
    {
        visibility = 0.2;
    }

    color.xyz = color.xyz * (ambient_color.xyz + (light_rgba.xyz * visibility));
}
