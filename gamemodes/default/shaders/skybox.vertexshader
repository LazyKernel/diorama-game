#version 330

layout (location = 0) in vec3 vertex_position;
layout (location = 1) in vec2 vertex_uv; // unused
layout (location = 2) in vec4 vertex_rgba; // unused

out vec3 texcoords;
out vec3 texcoords_2;

uniform float rotation;

uniform mat4 mvp_matrix;

void main() 
{
    mat4 rotation_mat = mat4 ( 
            cos( rotation ), 0.0, -sin( rotation ), 0.0,
            0.0,           1.0, 0.0, 0.0,
            sin( rotation ), 0.0, cos( rotation ), 0.0,
            0.0,           0.0, 0.0, 1.0 );

    texcoords = vertex_position;
    texcoords_2 = (rotation_mat * vec4 (vertex_position, 0)).xyz;

    gl_Position = mvp_matrix * vec4 (vertex_position, 1.0);
}

// #version 330

// layout (location = 0) in vec3 vertex_position;
// layout (location = 1) in vec2 vertex_uv;
// layout (location = 2) in vec4 vertex_rgba;

// uniform mat4 mvp_matrix;

// out vec2 final_uv;
// out vec4 final_rgba;

// void main()
// {
//     gl_Position = mvp_matrix * vec4 (vertex_position, 1.0f);
//     final_uv = vertex_uv;
//     final_rgba = vertex_rgba;
// }
