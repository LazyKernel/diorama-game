#version 330

layout (location = 0) in vec3 vertex_position;
layout (location = 1) in vec3 vertex_rgb;
layout (location = 2) in vec3 vertex_normal;

uniform mat4 model_matrix;
uniform mat4 mvp_matrix;
uniform vec4 light_direction;
uniform vec4 light_rgba;

out vec4 f_light_rgba;
out vec4 f_diffuse_rgba;
out vec4 f_shadow_xyz;
flat out vec3 f_normal_model;

void main()
{
    // vertex transform

    gl_Position = mvp_matrix * vec4 (vertex_position, 1.0);

    // diffuse lighting

    vec4 m_normal = model_matrix * vec4 (vertex_normal.xyz, 0.0);
    float cos_theta = clamp (dot (m_normal, light_direction), 0.0, 1.0);
    f_light_rgba = light_rgba * cos_theta;

    // diffuse colour

    f_diffuse_rgba = vec4 (vertex_rgb, 1.0);

    // shadow data

    f_shadow_xyz = vec4 (vertex_position, 1.0);
    f_normal_model = vertex_normal.xyz;    
}
